export const dataCode =[{
    "A1": {
        "line1": "# which output is correct",
        "line2": "x, y, z = \"apple\", \"banana\", \"cherry\"",
        "line3": "print(x)",
        "line4": "print(y)",
        "line5": "print(z)",
        "line6": "",
        "line7": "",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "apple",
        "line14": "banana",
        "line15": "cherry"
      },
      "A10": {
        "line1": "select Valid variable names",
        "line2": "x = \"Red\"",
        "line3": "_y = \"Blue\"",
        "line4": "Xy = \"Green\"",
        "line5": "XY = \"Yellow\"",
        "line6": "xy2 = \"Orange\"",
        "line7": "",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "",
        "line14": "",
        "line15": ""
      },
      "A2": {
        "line1": "select Valid variable names",
        "line2": "apple = \"Red\"",
        "line3": "banana = \"Yellow\"",
        "line4": "_grape = \"Purple\"",
        "line5": "FruitBasket = \"Mixed\"",
        "line6": "FRUIT_NUMBER = \"Five\"",
        "line7": "",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "",
        "line14": "",
        "line15": ""
      },
      "A3": {
        "line1": "select Valid variable names",
        "line2": "myvar = \"Alice\"",
        "line3": "2myvar = \"bob\"",
        "line4": "_my_var = \"Charlie\"",
        "line5": "myVar = \"David\"",
        "line6": "MYVAR = \"Eve\"",
        "line7": "",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "",
        "line14": "",
        "line15": ""
      },
      "A4": {
        "line1": "#which output is correct",
        "line2": "k = b'byte string'",
        "line3": "l = bytearray(5)",
        "line4": "print(type(k))",
        "line5": "print(type(l))",
        "line6": "",
        "line7": "",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "<class 'list'>",
        "line14": "<class 'bytearray'>",
        "line15": ""
      },
      "A5": {
        "line1": "#which output is correct",
        "line2": "a = [1, 2, 3]",
        "line3": "b = (4, 5, 6)",
        "line4": "print(type(a))",
        "line5": "print(type(b))",
        "line6": "",
        "line7": "",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "<class 'list'>",
        "line14": "<class 'tuple'>",
        "line15": ""
      },
      "A6": {
        "line1": "#which output is correct",
        "line2": "# Convert large integer to float",
        "line3": "z = float(123456)",
        "line4": "print(z)",
        "line5": "",
        "line6": "",
        "line7": "",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "123456",
        "line14": "",
        "line15": ""
      },
      "A7": {
        "line1": "#which output is correct",
        "line2": "# Convert float to string",
        "line3": "x = str(3.5)",
        "line4": "print(x) ",
        "line5": "",
        "line6": "",
        "line7": "",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "3.5",
        "line14": "",
        "line15": ""
      },
      "A8": {
        "line1": "#which output is correct",
        "line2": "e = 100",
        "line3": "f = 100.0",
        "line4": "print(type(e))",
        "line5": "print(type(f))",
        "line6": "",
        "line7": "",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "<class 'int'>",
        "line14": "<class 'float'>",
        "line15": ""
      },
      "A9": {
        "line1": "#which output is correct",
        "line2": "class ExampleClass:",
        "line3": " def __init__(self):",
        "line4": " self.value = \"A class attribute\"",
        "line5": "r = ExampleClass()",
        "line6": "print(type(ExampleClass))",
        "line7": "print(type(r))",
        "line8": "",
        "line9": "",
        "line10": "",
        "line11": "",
        "line12": "",
        "line13": "<class 'ExampleClass'>",
        "line14": "<class 'ExampleClass'>",
        "line15": ""
      }
      ,
          "B1": {
            "line1": "# which output is correct",
            "line2": "x, y, z = \"apple\", \"banana\", \"cherry\"",
            "line3": "print(x)",
            "line4": "print(y)",
            "line5": "print(z)",
            "line6": "",
            "line7": "",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "SyntaxError: cannot assign to expression",
            "line14": "",
            "line15": ""
          },
          "B10": {
            "line1": "select Valid variable names",
            "line2": "x = \"Red\"",
            "line3": "_y = \"Blue\"",
            "line4": "Xy = \"Green\"",
            "line5": "XY = \"Yellow\"",
            "line6": "class = \"Orange\"",
            "line7": "",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "",
            "line14": "",
            "line15": ""
          },
          "B2": {
            "line1": "select Valid variable names",
            "line2": "apple = \"Red\"",
            "line3": "123fruit = \"Yellow\"",
            "line4": "_grape = \"Purple\"",
            "line5": "FruitBasket = \"Mixed\"",
            "line6": "FRUIT_NUMBER = \"Five\"",
            "line7": "",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "",
            "line14": "",
            "line15": ""
          },
          "B3": {
            "line1": "select Valid variable names",
            "line2": "myvar = \"Alice\"",
            "line3": "my_var = \"Bob\"",
            "line4": "_my_var = \"Charlie\"",
            "line5": "myVar = \"David\"",
            "line6": "MYVAR = \"Eve\"",
            "line7": "",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "",
            "line14": "",
            "line15": ""
          },
          "B4": {
            "line1": "#which output is correct",
            "line2": "k = b'byte string'",
            "line3": "l = bytearray(5)",
            "line4": "print(type(k))",
            "line5": "print(type(l))",
            "line6": "",
            "line7": "",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "<class 'bytes'>",
            "line14": "<class 'bytearray'>",
            "line15": ""
          },
          "B5": {
            "line1": "#which output is correct",
            "line2": "a = [1, 2, 3]",
            "line3": "b = (4, 5, 6)",
            "line4": "print(type(a))",
            "line5": "print(type(b))",
            "line6": "",
            "line7": "",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "<class 'tuple'>",
            "line14": "<class 'list'>",
            "line15": ""
          },
          "B6": {
            "line1": "#which output is correct",
            "line2": "# Convert large integer to float",
            "line3": "z = float(123456)",
            "line4": "print(z)",
            "line5": "",
            "line6": "",
            "line7": "",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "123456.0",
            "line14": "",
            "line15": ""
          },
          "B7": {
            "line1": "#which output is correct",
            "line2": "# Convert float to string",
            "line3": "x = str(3.5)",
            "line4": "print(x)",
            "line5": "",
            "line6": "",
            "line7": "",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "3",
            "line14": "",
            "line15": ""
          },
          "B8": {
            "line1": "#which output is correct",
            "line2": "e = 100",
            "line3": "f = 100.0",
            "line4": "print(type(e))",
            "line5": "print(type(f))",
            "line6": "",
            "line7": "",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "<class 'True'>",
            "line14": "<class 'float'>",
            "line15": ""
          },
          "B9": {
            "line1": "#which output is correct",
            "line2": "class ExampleClass:",
            "line3": " def __init__(self):",
            "line4": " self.value = \"A class attribute\"",
            "line5": "r = ExampleClass()",
            "line6": "print(type(ExampleClass))",
            "line7": "print(type(r))",
            "line8": "",
            "line9": "",
            "line10": "",
            "line11": "",
            "line12": "",
            "line13": "<class 'type'>",
            "line14": "<class 'ExampleClass'>",
            "line15": ""
          }
        ,
          "A_pass1": "pass07",
          "A_pass10": "pass07",
          "A_pass2": "pass07",
          "A_pass3": "pass072334",
          "A_pass4": "pass07324",
          "A_pass5": "pass07",
          "A_pass6": "pass0734",
          "A_pass7": "pass07",
          "A_pass8": "pass07",
          "A_pass9": "pass07342",
          "B_pass1": "pass07243",
          "B_pass10": "pass07213",
          "B_pass2": "pass073423",
          "B_pass3": "pass07",
          "B_pass4": "pass07",
          "B_pass5": "pass0731",
          "B_pass6": "pass07",
          "B_pass7": "pass0734",
          "B_pass8": "pass07342",
          "B_pass9": "pass07",
          
          "defaultClassname": "consoleStyle consoleCMD",
          "defaultClassnameConsole": "divConsole",
          "defaultLine": "programingQuizAPP>python excute.py"
}]